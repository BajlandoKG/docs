<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Single Sign On on Vanilla Forums Documentation</title>
    <link>//docs.vanillaforums.com/tags/single-sign-on/</link>
    <description>Recent content in Single Sign On on Vanilla Forums Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="//docs.vanillaforums.com/tags/single-sign-on/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Embedded</title>
      <link>//docs.vanillaforums.com/help/sso/jsconnect/embed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/jsconnect/embed/</guid>
      <description>

&lt;h2 id=&#34;embedding-with-seamless-jsconnect&#34;&gt;Embedding with Seamless jsConnect&lt;/h2&gt;

&lt;p&gt;&lt;a title=&#34;jsConnect Technical Documentation Part 1: Site-Wide SSO&#34; href=&#34;http://blog.vanillaforums.com/implementing-jsconnect/jsconnect-technical-documentation/&#34;&gt;Part 1&lt;/a&gt; of this documentation told you how to set up jsConnect SSO for site-wide SSO. However, if you have Vanilla embedded in a page you&amp;rsquo;ll notice that the SSO doesn&amp;rsquo;t automatically sign you in even if users are signed in to the containing page. In order to make the sign in seamless you need to add some SSO information to your embed code.&lt;/p&gt;

&lt;p&gt;First, we&amp;rsquo;ll address another important issue: Mobile Safari. &lt;strong&gt;Attempting embedded SSO across two domains will not work in this browser (and therefore, on all Apple devices)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To solve this, your forum must be hosted on a subdomain of your main site. For example, if your site is url.com, you could put your forum on forum.url.com, and then embed it from there. This sidesteps Mobile Safari&amp;rsquo;s issue, and potentially increases your search engine value as well. Our clients can change their forum to a subdomain of their site by going to &amp;ldquo;Customize Domain&amp;rdquo; in their Dashboard and following the instructions there.&lt;/p&gt;

&lt;p&gt;Now, on to revising your embed code with some additional SSO information.&lt;/p&gt;

&lt;h2 id=&#34;vanilla-embed-code&#34;&gt;Vanilla Embed Code&lt;/h2&gt;

&lt;p&gt;Consider the embed code for Vanilla comments:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;amp;gt;

/*** Required Settings: Edit BEFORE pasting into your web page ***/

var vanilla_forum_url = &#39;http://your.url.com/&#39;; // The full http url &amp;amp;amp; path to your vanilla forum
var vanilla_identifier = &#39;your-content-identifier&#39;; // Your unique identifier for the content being commented on
&amp;lt;strong&amp;gt;var vanilla_sso = &#39;SSO STRING&#39;; // Your SSO string.&amp;lt;/strong&amp;gt;

/*** DON&#39;T EDIT BELOW THIS LINE ***/

(function() {
var vanilla = document.createElement(&#39;script&#39;);
vanilla.type = &#39;text/javascript&#39;;
var timestamp = new Date().getTime();
vanilla.src = vanilla_forum_url + &#39;/js/embed.js&#39;;

(document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(vanilla);
})();

&amp;amp;lt;/script&amp;amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you declare &lt;strong&gt;vanilla_sso&lt;/strong&gt; and give it the proper value then Vanilla will be able to sign in your user. Here is what you need to do to generate your SSO string:
&lt;ol&gt;
    &lt;li&gt;Start with the signed in user. This has the same fields as the user from the &lt;a title=&#34;jsConnect Technical Documentation Part 1: Site-Wide SSO&#34; href=&#34;http://blog.vanillaforums.com/implementing-jsconnect/jsconnect-technical-documentation/&#34;&gt;site-wide sso&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Add your &lt;strong&gt;client_id&lt;/strong&gt; to the user so Vanilla will know how to identify you.&lt;/li&gt;
    &lt;li&gt;JSON encode the user.&lt;/li&gt;
    &lt;li&gt;Base64 encode the user in UTF-8. This is your signature string.&lt;/li&gt;
    &lt;li&gt;Sign the signature string with your signature and the current timestamp using HMAC SHA1. Confirm the signature string is hex encoded.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;signature = hmacsha1(signature_string + &amp;quot; &amp;quot; + timestamp, secret);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/li&gt;
    &lt;li&gt;Build your final sso string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vanilla_sso = signature_string + &amp;quot; &amp;quot; + signature + &amp;quot; &amp;quot; + timestamp + &amp;quot; hmacsha1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/li&gt;
&lt;/ol&gt;
That&amp;rsquo;s it! The value of vanilla_sso from above is what you put in your embed code. Since this needs to be dynamically generated by your site you can&amp;rsquo;t use SSO on a static page.
&lt;h2&gt;Gotchas&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;The above example is for blog comments. For a full forum embed, use the code provided under &amp;ldquo;Forum Embed&amp;rdquo; in the Dashboard.&lt;/li&gt;
    &lt;li&gt;&lt;span style=&#34;line-height: 12.986111640930176px;&#34;&gt;Even though your signature string is base64 encoded make sure the actual signature is hex encoded. The correct string will be 40 characters consisting of the numbers 0-9 and a-f.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;The timestamp is a unix timestamp. That means it will be an integer and represents the number of seconds since 1 January 1970. Most languages have a way of getting this timestamp.&lt;/li&gt;
&lt;/ul&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OAuth</title>
      <link>//docs.vanillaforums.com/help/sso/oauth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/oauth/</guid>
      <description>

&lt;h2 id=&#34;sso-with-oauth-overview&#34;&gt;SSO with OAuth: Overview&lt;/h2&gt;

&lt;p&gt;Because OAuth 2.0 is an SSO &lt;em&gt;framework&lt;/em&gt; and not a narrowly defined protocol, custom services work is typically required to set up an OAuth solution for your forum.&lt;/p&gt;

&lt;p&gt;Vanilla currently provides OAuth2 integrations with these third-party services as ready-to-go addons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Google+&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Contact the Vanilla Support Team for more information.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SAML</title>
      <link>//docs.vanillaforums.com/help/sso/saml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/saml/</guid>
      <description>

&lt;h2 id=&#34;sso-with-saml-overview&#34;&gt;SSO with SAML: Overview&lt;/h2&gt;

&lt;p&gt;Vanilla has implemented the parts of the SAML 2.0 spec required for SSO. This is done by enabling the SAMLSSO addon, and configuring it via its Settings page (Dashboard -&amp;gt; Addons -&amp;gt; SAMLSSO -&amp;gt; Settings button).&lt;/p&gt;

&lt;p&gt;SAML accounts are mapped to existing forum accounts by &lt;strong&gt;email address&lt;/strong&gt;, or a new account is created if no match is found.&lt;/p&gt;

&lt;p&gt;Vanilla&amp;rsquo;s SAML mapping is as follows (the right value is the SAML key):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;UniqueID =&amp;gt; id
Name =&amp;gt; uid
Email =&amp;gt; mail
Photo =&amp;gt; photo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also accept a &lt;code&gt;roles&lt;/code&gt; field optionally. &lt;code&gt;Photo&lt;/code&gt; is likewise optional.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;UniqueID&lt;/code&gt; is whatever you&amp;rsquo;re using to absolutely uniquely identify the user on your side that will never change.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Name&lt;/code&gt; is the username. We recommend keeping it within the normal rules (alphanumerics and underscores only, 50-character limit, must be unique) but we do not validate its formatting on our side over SSO because we don&amp;rsquo;t want to fail a login. It would just make @mentions impossible to use if it had spaces or special characters in it. However, in the case where there&amp;rsquo;s a duplicate name or none provided, it will send the user to a &amp;ldquo;Connect&amp;rdquo; page to provide a valid, unique username which will then also be validated for formatting.&lt;/p&gt;

&lt;p&gt;We don&amp;rsquo;t validate emails on our side either. In general, we are assuming you&amp;rsquo;ve done the data validation on your side and adding more would gum up the works.&lt;/p&gt;

&lt;p&gt;Roles consist of a comma-separated list of exact name matches to existing roles on your forum.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seamless Setup</title>
      <link>//docs.vanillaforums.com/help/sso/jsconnect/seamless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/jsconnect/seamless/</guid>
      <description>

&lt;h2 id=&#34;seamless-sso-with-jsconnect&#34;&gt;Seamless SSO with jsConnect&lt;/h2&gt;

&lt;p&gt;jsConnect uses javascript to allow cross-domain single-signon with another site. We provide several &lt;a title=&#34;Implementing Vanilla jsConnect Single-Signon on your Site&#34; href=&#34;http://blog.vanillaforums.com/help/implementing-jsconnect-single-signon-on/#libraries&#34;&gt;client libraries&lt;/a&gt; to help you implement jsConnect on your site. If your site has been programmed in a language that doesn&amp;rsquo;t have a client library than this is documentation is for you.&lt;/p&gt;

&lt;p&gt;Please note that this is technical documentation and requires knowledge programming to understand.
&lt;h2&gt;Functions You&amp;rsquo;ll Need&lt;/h2&gt;
jsConnect makes use of some functions that are available in most modern programming languages. You might want to do a bit of research to see if your language supports these functions because they are quite difficult to implement yourself.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve tried to make the functions a generic as possible, but they&amp;rsquo;ll most likely be called something different in our language. A little googling should help you find what you need.
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;timestamp&lt;/strong&gt;: Return the current unix timestamp. Note that your server has to have it&amp;rsquo;s time reasonably in synch with Vanilla&amp;rsquo;s server.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;json encode&lt;/strong&gt;: Encode an object/associative array in the json (ex. {&amp;ldquo;name&amp;rdquo;: &amp;ldquo;Joe&amp;rdquo;, &amp;ldquo;email&amp;rdquo;: &amp;ldquo;joe@noreply.com&amp;rdquo;})&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;query string encode&lt;/strong&gt;: Encode an object/associative array like a query string in RFC1738 (ex. name=Joe&amp;amp;email=joe%40noreply.com)&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;md5 or sha1&lt;/strong&gt;: Call an md5 or sha1 hash on a string. We strongly recommend sha1.&lt;/li&gt;
&lt;/ul&gt;
We also have an SSO module for automatically signing in to an embedded forum. If you are for sure going to just embed Vanilla then you might want to try this first.
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;base 64 encode&lt;/strong&gt;: Encode a string in base64 notation.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;hmac sha1&lt;/strong&gt;. Call the hmac(sha1) hashing algorithm on a string and a secret key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Concepts&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;JSONP&lt;/strong&gt;&lt;/h3&gt;
JSONP is a technology that browsers can use to get around the same-origin limitation of browsers and make cross-domain requests. Vanilla uses jsonp to transmit some of its SSO information. When you program a jsonp page it must follow a specific format. To best illustrate this lets use an example.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s say I want to request a jsonp response from the &lt;strong&gt;/getname.json&lt;/strong&gt; page. What I&amp;rsquo;d do is make a request to that page with a querystring parameter called &lt;strong&gt;callback&lt;/strong&gt; like this: &lt;strong&gt;/getname.json?callback=displayname.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now if I&amp;rsquo;m programming /getname.json it&amp;rsquo;s my job to display my response in jsonp format which would look something like this:&lt;/p&gt;

&lt;p&gt;displayname({&amp;ldquo;name&amp;rdquo;: &amp;ldquo;Todd&amp;rdquo;});&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll notice a couple of things here:
&lt;ol&gt;
    &lt;li&gt;I passed a &lt;strong&gt;callback&lt;/strong&gt; parameter to the page. The value of the parameter is used as the name of a function I&amp;rsquo;m calling in the response.&lt;/li&gt;
    &lt;li&gt;The function is passed an argument encoded in json. Whatever I want to pass to the other site must be json encoded like this.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;strong&gt;Important: When writing a page that returns jsonp you must ALWAYS return valid javascript. If you return HTML or something else then the page won&amp;rsquo;t work. This is something that a lot of people get wrong.&lt;/strong&gt;&lt;/div&gt;
&lt;h3&gt;Client ID and Secret&lt;/h3&gt;
In order to secure your single-sign-on connection you must share a &lt;strong&gt;client ID&lt;/strong&gt; and &lt;strong&gt;secret&lt;/strong&gt; between your site and Vanilla. Your client ID is used to identify your site and is public. Your secret is like a site-password and must be kept secret. &lt;strong&gt;Do not share your secret with anyone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When setting up jsConnect in Vanilla&amp;rsquo;s dashboard there is a button to generate a client ID and secret. You can use this button or create your own. You can use a more freindly name for your client ID, but stick to numbers and letter. We recommend using a secret that is generated by Vanilla.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Signing a Request&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve done any single sign-on or authentication work you&amp;rsquo;ve probably run into the concept of &lt;strong&gt;signing a request&lt;/strong&gt;. Basically, you sign a request with your shared secret so that both sites know that the request came from a legitimate source. When you transmit user information you want to also sign that information so that I know it came from your site and not someone else trying to hack into Vanilla.&lt;/p&gt;

&lt;p&gt;jsConnect uses signatures to secure its requests. To sign a request you use a &lt;strong&gt;hash function&lt;/strong&gt; such as md5 or sha1. You can select a variety of hash functions, but we recommend using &lt;strong&gt;sha1&lt;/strong&gt; because it is more secure and widely available.&lt;/p&gt;

&lt;p&gt;We recommend getting jsConnect working without signatures first and then securing them. In Vanilla you can put your jsConnect connection in &lt;strong&gt;test mode&lt;/strong&gt; and it won&amp;rsquo;t check for a signature. &lt;strong&gt;Just make sure you don&amp;rsquo;t go live without signing your requests&lt;/strong&gt;.
&lt;h2&gt;Site-Wide SSO&lt;/h2&gt;
For site-wide SSO you&amp;rsquo;ll need to make a page on &lt;strong&gt;your site&lt;/strong&gt; that provides authentication information. We call this your &lt;strong&gt;authentication page&lt;/strong&gt;. You can call it whatever you want, but for the purposes of this documentation we&amp;rsquo;ll call it &lt;strong&gt;/authenticate.json&lt;/strong&gt;
&lt;h3&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/h3&gt;
&lt;strong&gt;&lt;/strong&gt;GET /authenticate.json?parameters
&lt;h3&gt;Parameters&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;client_id&lt;/strong&gt;: &lt;strong&gt;REQUIRED&lt;/strong&gt;. Your shared client ID that you&amp;rsquo;ve configured in Vanilla&amp;rsquo;s dashboard.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;callback: REQUIRED. &lt;/strong&gt;The name of the callback function.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;timestamp&lt;/strong&gt;: &lt;strong&gt;OPTIONAL&lt;/strong&gt;. For secure requests, Vanilla will send you the timestamp of its request. If you are checking security then you want make sure that the timestamp isn&amp;rsquo;t too old. We recommend a timeframe of  5-30 minutes.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;signature&lt;/strong&gt;: &lt;strong&gt;OPTIONAL&lt;/strong&gt;. For secure requests, Vanilla will sign the timestamp parameter&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt; &lt;strong&gt;Response&lt;/strong&gt;&lt;/h3&gt;
There are four valid responses you can return depending on the request and whether or not the user is signed in.
&lt;h4&gt;No User Response: The user is not signed in to your site .&lt;/h4&gt;
callback({&amp;ldquo;name&amp;rdquo;: &amp;ldquo;&amp;rdquo;, &amp;ldquo;photourl&amp;rdquo;: &amp;ldquo;&amp;rdquo;});&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;: Even if there is no user signed in you still must return a valid jsonp response. So in this case we just return an empty user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Stub Response: The user is signed in to your site, but the request hasn&amp;rsquo;t been signed.&lt;/strong&gt;
&lt;pre&gt;callback({
    &amp;ldquo;name&amp;rdquo;: &amp;ldquo;John Doe&amp;rdquo;,
    &amp;ldquo;photourl&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;http://nosite.com/johndoe.png&amp;quot;&#34;&gt;http://nosite.com/johndoe.png&amp;quot;&lt;/a&gt;
});&lt;/pre&gt;
&lt;strong&gt;Notes&lt;/strong&gt;: Vanilla sends an un-signed request to your page just to provide a picture and photo to the user as a notice that they are signed on to your site.
&lt;h4&gt;User Response: The user is signed in to your site, and the request is signed (or you are testing).&lt;/h4&gt;
&lt;pre&gt;callback({
    &amp;ldquo;uniqueid&amp;rdquo;: &amp;ldquo;1234&amp;rdquo;, // REQUIRED. The ID that uniquely identifies the user on your site.
    &amp;ldquo;name&amp;rdquo;: &amp;ldquo;John Doe&amp;rdquo;, // REQUIRED. The name of the user on your site.
    &amp;ldquo;email&amp;rdquo;: &amp;ldquo;johndoe@noreply.com&amp;rdquo;, // REQUIRED. The user&amp;rsquo;s email address
    &amp;ldquo;photourl&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;http://nosite.com/johndoe.png&amp;quot;&#34;&gt;http://nosite.com/johndoe.png&amp;quot;&lt;/a&gt;, // OPTIONAL. A photo for the user.
    &amp;ldquo;roles&amp;rdquo;: &amp;ldquo;member,administrator&amp;rdquo;, // OPTIONAL. You can configure jsConnect to synchronize roles
    &amp;ldquo;client_id&amp;rdquo;: &amp;ldquo;123456789&amp;rdquo;, // REQUIRED. Your client ID.
    &amp;ldquo;signature&amp;rdquo;: &amp;ldquo;cdb398fdab244999d8ba301eb6334298&amp;rdquo; // REQUIRED. The signature of this response.
});&lt;/pre&gt;
&lt;strong&gt;Notes&lt;/strong&gt;: This response is the heart of jsConnect. It tells Vanilla about the user signed in to your system so that Vanilla can sign the user into Vanilla too. There are a few important points about this response.
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;uniqueid, name, client_id, &lt;/strong&gt;and &lt;strong&gt;signature&lt;/strong&gt; are required. Make sure you provide us with these values in your response and make sure they have values.&lt;/li&gt;
    &lt;li&gt;The &lt;strong&gt;uniqueid&lt;/strong&gt; field must never change for a given user. Your site usually has some sort of integer or guid that uniquely identifies a user. Use this.&lt;/li&gt;
    &lt;li&gt;The signature is used to secure the response and is very important, but can be left out if you are just testing. How to sign the response is explained below.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;h4&gt;Error Response: Some error has occurred (error response).&lt;/h4&gt;
&lt;pre&gt;callback({
    &amp;ldquo;error&amp;rdquo;: &amp;ldquo;invalid_client&amp;rdquo;, // REQUIRED. A string identifier for the error.
    &amp;ldquo;message&amp;rdquo;: &amp;ldquo;Client ID does not match.&amp;rdquo;, // REQUIRED. A user-readable error message.
});&lt;/pre&gt;
&lt;strong&gt;Notes&lt;/strong&gt;: You usually return an error response if a request has invalid security information. However, you can also return an error response if your application encounters an unknown error on its own.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;
&lt;h3&gt;Other Notes on your Response&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;Make sure you return an HTTP 200 response (i.e. no error codes).&lt;/li&gt;
    &lt;li&gt;You can set the Content-Type to application/javascript if you wish, but it&amp;rsquo;s not necessary.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Securing Site-Wide SSO&lt;/h2&gt;
You can get your jsConnect page working without worrying about security, but in order for your SSO to be secure you have to a) check the request to make sure it is secure, and b) sign your response so that Vanilla can make sure it&amp;rsquo;s secure.
&lt;h3&gt;Checking the Request for Security&lt;/h3&gt;
In order to make sure the request from Vanilla is legitimate you must first check the request. You do this on your &lt;strong&gt;authentication page&lt;/strong&gt; before displaying your response. If the request doesn&amp;rsquo;t check out you need to display an error response with some information on what might have gone wrong. Here are the things you should check.
&lt;ol&gt;
    &lt;li&gt;Make sure the request provides a &lt;strong&gt;client_id&lt;/strong&gt;. &lt;strong&gt;error: invalid_request, message: The client_id parameter is missing.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;Make sure &lt;strong&gt;client_id&lt;/strong&gt; matches the client ID you&amp;rsquo;ve set up on your site. &lt;strong&gt;error: invalid_client, message: Unknown client.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;See if a &lt;strong&gt;timestamp&lt;/strong&gt; was provided. If no timestamp was provided return the &lt;strong&gt;no user response&lt;/strong&gt; or the &lt;strong&gt;user stub response.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;If a timestamp was provided you need to make sure it checks out.&lt;/div&gt;
&lt;div&gt;
&lt;ol&gt;
    &lt;li&gt;Make sure the timestamp isn&amp;rsquo;t at most 5-30 minutes in the past or future. &lt;strong&gt;error: invalid_request, message: The timestamp is invalid.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;Make sure the request has a signature. &lt;strong&gt;error: invalid_request, message: Missing  signature parameter.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;Make sure the signature is valid. To check the signature you must do the following:
&lt;pre&gt;if (hash(concat(timestamp, secret)) == signature)
// valid
else
// invalid&lt;/pre&gt;
Basically, you concatenate your secret to the end of the timestamp and call your hash function. If your calculated signature matches the signature passed to the request then the request is valid. &lt;strong&gt;error: access_denied, message: Signature invalid.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;If you&amp;rsquo;ve checked all of the above conditions and haven&amp;rsquo;t encountered any errors then the request is valid and you can display the appropriate response. First you need to sign it though.&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;Signing your Response for Security&lt;/strong&gt;&lt;/h3&gt;
Once you&amp;rsquo;ve checked the request for security you need to sign your response so that Vanilla can check security on its end. To show you how to do this consider the following user&amp;rsquo;s sso information and the following client ID and secret.
&lt;pre&gt;user = {
    uniqueid: &amp;ldquo;1234&amp;rdquo;,
    name: &amp;ldquo;John Doe&amp;rdquo;,
    email: &amp;ldquo;johndoe@noreply.com&amp;rdquo;,
    photourl: &amp;ldquo;&lt;a href=&#34;http://nosite.com/johndoe.png&#34;&gt;http://nosite.com/johndoe.png&lt;/a&gt;&amp;ldquo;
};&lt;/pre&gt;
&lt;pre&gt;client_id = &amp;ldquo;123456789&amp;rdquo;;
secret = &amp;ldquo;985d2f9eb57a8b55db3c04c20272bce9308764b0&amp;rdquo;; // don&amp;rsquo;t give this out!!!&lt;/pre&gt;
Here is how you sign the user with the secret.
&lt;ol&gt;
    &lt;li&gt;Sort the user by keys:
&lt;pre&gt;user_sorted = {
    email:&amp;ldquo;johndoe@noreply.com&amp;rdquo;,
    name:&amp;ldquo;John Doe&amp;rdquo;,
    photourl:&amp;ldquo;&lt;a href=&#34;http://nosite.com/johndoe.png&amp;quot;&#34;&gt;http://nosite.com/johndoe.png&amp;quot;&lt;/a&gt;,
    uniqueid:&amp;ldquo;1234&amp;rdquo;
};&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Url encode the sorted user with RFC1738 (a fancy way of saying make it a query string). This gives you your &lt;strong&gt;signature string&lt;/strong&gt;.
&lt;pre&gt;signature_string =
&amp;ldquo;email=johndoe%40noreply.com&amp;amp;name=John+Doe&amp;amp;photourl=http%3A%2F%2Fnosite.com%2Fjohndoe.png&amp;amp;uniqueid=1234&amp;rdquo;;&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Concatenate the signature with your secret and call your hash function around everything:
&lt;pre&gt;signature = sha1(concat(signature_string, secret));&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Now you want to add both your client_id and your signature back into the user.
&lt;pre&gt;user = {
    uniqueid: &amp;ldquo;1234&amp;rdquo;,
    name: &amp;ldquo;John Doe&amp;rdquo;,
    email: &amp;ldquo;johndoe@noreply.com&amp;rdquo;,
    photourl: &amp;ldquo;&lt;a href=&#34;http://nosite.com/johndoe.png&#34;&gt;http://nosite.com/johndoe.png&lt;/a&gt;&amp;rdquo;,
    client_id: &amp;ldquo;123456789&amp;rdquo;,
    signature: &amp;ldquo;3c982c0b50bc06deb0b9df2a9a0770b6f88b3749&amp;rdquo;
};&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Now that you have your signed response you can display it as jsonp.&lt;/li&gt;
    &lt;li&gt;You&amp;rsquo;re done!&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;Make sure you don&amp;rsquo;t add your client_id or signature to your sso user until the &lt;strong&gt;last&lt;/strong&gt; step.&lt;/li&gt;
    &lt;li&gt;If your usernames are going to use non-ascii characters such as accents then make sure your page is encoded using utf-8 and that you have an appropriate Content-Type header.&lt;/li&gt;
    &lt;li&gt;Try and make sure your system doesn&amp;rsquo;t have any spaces at the beginning or end of usernames or email addresses. You won&amp;rsquo;t be able to see the spaces, but they usually aren&amp;rsquo;t allowed in usernames and will mean the user isn&amp;rsquo;t allowed to register with Vanilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;What&amp;rsquo;s Next&lt;/strong&gt;&lt;/h3&gt;
At this point you should have a valid jsConnect authentication page and Vanilla will be able to recognize your users. You just need to set up the connection in Vanilla and you&amp;rsquo;re good to go.&lt;/p&gt;

&lt;p&gt;If you want to implement embedded SSO then head over to &lt;a href=&#34;http://blog.vanillaforums.com/jsconnect-technical-documentation-for-embedded-sso/&#34;&gt;part 2&lt;/a&gt; of this documentation to see how.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Single Sign-On (SSO)</title>
      <link>//docs.vanillaforums.com/help/sso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/</guid>
      <description>

&lt;h2 id=&#34;single-sign-on-overview&#34;&gt;Single Sign-On Overview&lt;/h2&gt;

&lt;p&gt;Single sign-on (SSO) is how to let your users sign on to a third-party system (like a Vanilla Forum) without needing a separate username and password.&lt;/p&gt;

&lt;p&gt;In broad terms, an SSO solution defines how two systems securely communicate the identity of a user that is switching between them. In the context of Vanilla, that means the forum securely talking to your site or identity provider to see if a user is signed in, and then automatically using that identity.&lt;/p&gt;

&lt;h2 id=&#34;solutions-we-offer&#34;&gt;Solutions We Offer&lt;/h2&gt;

&lt;p&gt;Vanilla offers three flavors of single sign-on:  &lt;a href=&#34;//docs.vanillaforums.com/help/sso/jsconnect&#34;&gt;jsConnect&lt;/a&gt; (our in-house solution), &lt;a href=&#34;//docs.vanillaforums.com/help/sso/saml&#34;&gt;SAML&lt;/a&gt;, and &lt;a href=&#34;//docs.vanillaforums.com/help/sso/oauth&#34;&gt;OAuth&lt;/a&gt;. SAML and OAuth are currently only available on cloud, and the latter requires services work to integrate specifically with your platform. We also offer custom SSO integrations at our highest plan tiers.&lt;/p&gt;

&lt;h2 id=&#34;why-jsconnect&#34;&gt;Why jsConnect?&lt;/h2&gt;

&lt;p&gt;SSO systems are complex. Setting up your own SAML or OAuth system takes a lot of time, and generally is not feasible for small-to-medium business owners.&lt;/p&gt;

&lt;p&gt;If you have a website that stores your user&amp;rsquo;s identity and the only thing you need to integrate is a forum, jsConnect is a far simpler solution. This is because we&amp;rsquo;ve abstracted most of the work to our side of the connection, and provide sample code for making your side.&lt;/p&gt;

&lt;p&gt;However, even our easier solution does require a developer on your team. A developer can typically set up the client side of jsConnect in 2-6 hours using our &lt;a href=&#34;//docs.vanillaforums.com/help/sso/jsconnect/overview&#34;&gt;technical documentation&lt;/a&gt;. The only exception is &lt;strong&gt;WordPress&lt;/strong&gt; users, for which we&amp;rsquo;ve developed a ready-to-go &lt;a href=&#34;https://wordpress.org/plugins/vanilla-forums/&#34;&gt;SSO plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ready to learn more about jsConnect? Our &lt;a href=&#34;//docs.vanillaforums.com/help/sso/jsconnect&#34;&gt;concepts overview&lt;/a&gt; is where to head next.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Technical Overview</title>
      <link>//docs.vanillaforums.com/help/sso/jsconnect/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/jsconnect/overview/</guid>
      <description>

&lt;h2 id=&#34;jsconnect&#34;&gt;jsConnect&lt;/h2&gt;

&lt;p&gt;For jsConnect to work you&amp;rsquo;ll put some code on your site that identifies your users in a way that Vanilla can understand. Vanilla then requests this information when the user wants to sign in and synchronizes the user with Vanilla. This is done via &lt;a href=&#34;http://en.wikipedia.org/wiki/JSONP&#34;&gt;JSONP&lt;/a&gt;, which allows us to send your cookies from your site to you and obtain login information.&lt;/p&gt;

&lt;p&gt;Vanilla&amp;rsquo;s web-based single sign on (SSO) has 2 parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Your SSO endpoint (based on one of our example libraries) on &lt;em&gt;your&lt;/em&gt; site.&lt;/li&gt;
&lt;li&gt;Vanilla&amp;rsquo;s jsConnect plugin.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;jsConnect pings your endpoint whenever it wants to know if a user is logged in on your site. It does this using the user&amp;rsquo;s current session, so you can use your normal &amp;ldquo;is logged in&amp;rdquo; detection to determine this - nothing fancy here.&lt;/p&gt;

&lt;h2 id=&#34;your-endpoint&#34;&gt;Your endpoint&lt;/h2&gt;

&lt;p&gt;Your endpoint needs to say 1 of 3 things when it&amp;rsquo;s called:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The current user is a &lt;strong&gt;guest&lt;/strong&gt; (not logged in).&lt;/li&gt;
&lt;li&gt;User is logged in here, but this wasn&amp;rsquo;t a secure request (no signature + timestamp), so here&amp;rsquo;s their &lt;strong&gt;name &amp;amp; photo only&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;User is logged in AND this was securely requested, so here&amp;rsquo;s &lt;strong&gt;all the user data&lt;/strong&gt; (including email and a unique ID from your system, which are required).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our example libraries help you structure the output so that jsConnect can read it correctly. &lt;strong&gt;If we provide a client library that you can use then we highly recommend using it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These libraries are open source and maintained on Github:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vanillaforums/jsConnectPHP&#34;&gt;PHP jsConnect client library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vanillaforums/jsConnectRuby&#34;&gt;Ruby jsConnect client library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vanillaforums/jsConnectJava&#34;&gt;Java jsConnect client library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vanillaforums/jsConnectdotNet&#34;&gt;.NET jsConnect client library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these libraries have one file with all of the library code you&amp;rsquo;ll need and one file that gives an example usage. They also have a readme that tells you which file is which. &lt;em&gt;Please note that these libraries don&amp;rsquo;t support &lt;a href=&#34;//docs.vanillaforums.com/help/features/sso/jsconnect/embed&#34;&gt;embedded SSO&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If your site is programmed in a language that doesn&amp;rsquo;t have a client library then we provide documentation on our jsConnect protocol. Have a look at the &lt;a href=&#34;//docs.vanillaforums.com/help/sso/jsconnect/seamless&#34;&gt;jsConnect technical implementation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;how-jsconnect-maps-users&#34;&gt;How jsConnect maps users&lt;/h2&gt;

&lt;p&gt;After calling your endpoint and getting a &amp;ldquo;signed in&amp;rdquo; reply, jsConnect looks up the user. If they&amp;rsquo;ve &lt;em&gt;already&lt;/em&gt; used SSO, we&amp;rsquo;ve permanently mapped their unique ID to our UserID, so we sign them into that account. If they &lt;em&gt;haven&amp;rsquo;t&lt;/em&gt; used SSO before, 1 of 3 things happens:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the email for the user has never been used on the forum, it makes them a new account using the data passed and signs them into it.&lt;/li&gt;
&lt;li&gt;If the email is in use and &lt;code&gt;AutoConnect&lt;/code&gt; is enabled, we will immediately sign them in (and permanently store the mapping).&lt;/li&gt;
&lt;li&gt;If the email is in use and &lt;code&gt;AutoConnect&lt;/code&gt; is NOT enabled, we will prompt the user for their forum password to confirm their identity. This is the default setting because it is safer to assume you haven&amp;rsquo;t verified their email address.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vanilla Cloud customers should request Support enable &lt;code&gt;AutoConnect&lt;/code&gt; if they desire it. That is an important component of a seamless experience.&lt;/p&gt;

&lt;h2 id=&#34;tightening-the-integration&#34;&gt;Tightening the integration&lt;/h2&gt;

&lt;p&gt;To get very tight SSO integration, you will also want to follow these steps. Always carefully test your &lt;em&gt;basic&lt;/em&gt; SSO authentication &lt;strong&gt;before&lt;/strong&gt; tightening your integration.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Change your registration method to &amp;lsquo;Connect&amp;rsquo; to block non-SSO users from registering.&lt;/li&gt;
&lt;li&gt;Set your sign-in, sign-out, and registration URLs under jsConnect&amp;rsquo;s settings in your Dashboard.&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;Make this connection your default signin method.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;When linking or redirecting signed-in users to your forum, use the &lt;code&gt;/sso&lt;/code&gt; endpoint on the forum. This triggers jsConnect&amp;rsquo;s user lookup &lt;strong&gt;on the connection with &amp;ldquo;default sign in method&amp;rdquo; selected&lt;/strong&gt; without the user needing to click. Optionally, you can provide a &lt;code&gt;Target&lt;/code&gt; parameter with a relative path to specify where they should ultimately land on the forum. Example: &lt;code&gt;http://forum.yoursite.com/sso?Target=/categories&lt;/code&gt;. This is the final critical step in a fully seamless experience.&lt;/li&gt;
&lt;li&gt;For seamless SSO on an embedded forum, see our &lt;a href=&#34;http://blog.vanillaforums.com/jsconnect-technical-documentation-for-embedded-sso/&#34;&gt;embedded SSO solution&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;testing-the-integration&#34;&gt;Testing the integration&lt;/h2&gt;

&lt;p&gt;Use the &amp;ldquo;Test URL&amp;rdquo; link under your jsConnect settings to see if your endpoint is returning a good response.&lt;/p&gt;

&lt;p&gt;Try using your browser&amp;rsquo;s Incognite/Private window mode for testing. This allows you to have a separate &amp;ldquo;test&amp;rdquo; session while you stay logged in as the administrator in your main session to make changes quickly.&lt;/p&gt;

&lt;h2 id=&#34;common-questions&#34;&gt;Common questions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What do we do if SSO breaks and we&amp;rsquo;re locked out?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can log back in using the &amp;ldquo;hidden&amp;rdquo; URL &lt;code&gt;/entry/password&lt;/code&gt; to sign-in with an existing forum account. This page is never redirected for SSO.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can&amp;rsquo;t we just add users over the API?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We &lt;em&gt;strongly recommend against&lt;/em&gt; adding users over the API. Using jsConnect and allowing it to add users as they sign-in is the most robust and reliable approach that will cause you the fewest issues.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we use multiple SSO connections?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Absolutely. However, only one can be the default, which is what will trigger when &lt;code&gt;/sso&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do we have seamless sign-in for users who go directly to the forum?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve followed all the steps above, the only way a user can be not signed into the forum while signed into your main site is if they sign into your site separately and then manually visit the forum by typing in the address manually or clicking a browser bookmark. In this scenario, they would need to click a prompt to finish forum sign-in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How is sign-out handled?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We bounce them to your sign-in page after they sign-out on the forum. To do the opposite, redirect users thru our sign-out page, again passing a &lt;code&gt;Target&lt;/code&gt; parameter so they finish where you want them to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Does this work for native applications, non-web scenarios, or third-party products?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No. jsConnect is purely a web-based SSO workflow for your existing login system. We have separate products for popular third-party platforms and non-web scenarios.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we reverse-SSO to Vanilla via API to see if a user is logged in there?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not at this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we use jsConnect without providing an email address?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No. You absolutely must send an email, which is the only method for mapping users. If you are importing forum users without email addresses and need a way to map them over SSO, we recommend using dummy email addresses that follow a formula like &lt;code&gt;{uniqueID}&lt;/code&gt;@yoursite.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our system has overlapping names but Vanilla needs unique ones. How can we handle this?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We strongly recommend assigning them unique usernames in your system, then passing that unique username to jsConnect. Keep in mind that, for features like mentions and autocomplete to work, usernames must be unique and adhere to Vanilla&amp;rsquo;s username restrictions. Passing a duplicate &lt;code&gt;Name&lt;/code&gt; field for a new user over jsConnect will cause the connection to fail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we set roles over jsConnect?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, see our &lt;a href=&#34;//docs.vanillaforums.com/help/features/sso/jsconnect/seamless&#34;&gt;technical documentation&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The settings &amp;amp; endpoint response look correct now, but it&amp;rsquo;s still not working or redirecting properly.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try clearing your cookies and browser cache and restarting your browser. Use Incognito/Private mode whenever possible. Also, beware of Firefox caching redirects; when in doubt, double-check a redirect using another browser.&lt;/p&gt;

&lt;p&gt;Repeatedly attempting SSO with many sessions and accounts with changing settings can cause unexpected results. This isn&amp;rsquo;t a problem users would ever run into day-to-day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jsConnect</title>
      <link>//docs.vanillaforums.com/help/sso/jsconnect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//docs.vanillaforums.com/help/sso/jsconnect/</guid>
      <description>

&lt;h2 id=&#34;jsconnect-concepts-overview&#34;&gt;jsConnect Concepts Overview&lt;/h2&gt;

&lt;p&gt;Our SSO solution has a few basic assumptions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your user is signed into a &lt;strong&gt;website&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You&lt;/strong&gt; control this website and can add files &amp;amp; pages to it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The integration will be a lot easier and tighter if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have unique, validated &lt;strong&gt;usernames&lt;/strong&gt; for users.&lt;/li&gt;
&lt;li&gt;You have confirmed, unique &lt;strong&gt;email addresses&lt;/strong&gt; for users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;creating-mapping-users&#34;&gt;Creating &amp;amp; mapping users&lt;/h2&gt;

&lt;p&gt;Data that can currently be passed over SSO with jsConnect:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unique ID from your system (&lt;em&gt;required&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Email (&lt;em&gt;required&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Username (&lt;em&gt;recommended&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Photo URL&lt;/li&gt;
&lt;li&gt;Roles (Vanilla&amp;rsquo;s permissions management groups)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When receiving an SSO response, Vanilla will do a lookup by &lt;strong&gt;email address&lt;/strong&gt; against the forum database. If it finds a match and the user connects, a &lt;strong&gt;permanent mapping&lt;/strong&gt; is made against the unique ID your provided. This means future email changes on your side do not effect the login process.&lt;/p&gt;

&lt;p&gt;If no email match is found, a new forum account will be created instantly using the provided data. If no username is provided, the user will be prompted to create one.&lt;/p&gt;

&lt;p&gt;Data is synced at every new login. For instance, providing a different email address on the user&amp;rsquo;s fifth login will still log them into the same account, but will update their Vanilla email address.&lt;/p&gt;

&lt;p&gt;The Photo URL is accepted only if the user has not uploaded their own avatar in the forum yet, and it is a valid URL. Imported avatars (if you migrated to Vanilla from another platform) count as the user having uploaded their own avatar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We strongly recommend against creating new users via the API.&lt;/strong&gt; Our SSO solution lazy-creates new users for maximum robustness and reliability. Once a new user is created, you can optionally sync additional data about the user over API as needed.&lt;/p&gt;

&lt;h2 id=&#34;unified-user-experience&#34;&gt;Unified user experience&lt;/h2&gt;

&lt;p&gt;In Vanilla, these optional configuration changes are possible:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto-connect to existing forum user accounts without prompting for a password (i.e. your SSO source is 100% trusted).&lt;/li&gt;
&lt;li&gt;Disable all email sending in Vanilla.&lt;/li&gt;
&lt;li&gt;Disable profile editing.&lt;/li&gt;
&lt;li&gt;Redirect user profile links to another system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cloud users can contact support to make these changes.&lt;/p&gt;

&lt;h2 id=&#34;how-it-connects&#34;&gt;How it connects&lt;/h2&gt;

&lt;p&gt;Clicking the &amp;ldquo;Sign In&amp;rdquo; button in Vanilla generates an asynchronous request &lt;strong&gt;in the user&amp;rsquo;s browser session&lt;/strong&gt; back to the main website. This means the user&amp;rsquo;s cookies are sent as if they had visited the page directly, and that your normal login detection logic will work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;//docs.vanillaforums.com/img/help/features/sso/jsconnect-overview.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;two-flavors-of-sso&#34;&gt;Two Flavors of SSO&lt;/h2&gt;

&lt;p&gt;There are two implementations of SSO that jsConnect supports. You can implement either of the methods or both as they serve different purposes.&lt;/p&gt;

&lt;h3 id=&#34;method-1-site-wide-sso&#34;&gt;Method 1: Site-Wide SSO&lt;/h3&gt;

&lt;p&gt;You implement site-wide SSO when Vanilla is as a full site. With this method you need to create a page that provides your login information in jsonp format.&lt;/p&gt;

&lt;h3 id=&#34;method-2-embedded-sso&#34;&gt;Method 2: Embedded SSO&lt;/h3&gt;

&lt;p&gt;Vanilla also has the ability to be embedded in an html page either as an entire site or just as embedded comments. With this scenario you need to create a special SSO string that can be passed to the embedded Vanilla and provide login information.&lt;/p&gt;

&lt;h2 id=&#34;make-it-seamless&#34;&gt;Make it seamless&lt;/h2&gt;

&lt;p&gt;When setting up a jsConnect connection in full-site mode, you have the option to specify it as &amp;ldquo;default&amp;rdquo;. Doing this attaches it to the special &lt;code&gt;/sso&lt;/code&gt; endpoint in Vanilla. When a user clicks &amp;ldquo;Forum&amp;rdquo; in your website&amp;rsquo;s navigation, instead of linking to the forum homepage, instead link them to the &lt;code&gt;/sso&lt;/code&gt; page. This will auto-fire the asynchronous call back to your website rather than waiting for the user to click &amp;ldquo;sign in&amp;rdquo;, then drops them on the homepage as normal.&lt;/p&gt;

&lt;p&gt;For more information, read our &lt;a href=&#34;//docs.vanillaforums.com/help/sso/jsconnect/overview&#34;&gt;technical overview&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;wordpress-plugin&#34;&gt;WordPress plugin&lt;/h2&gt;

&lt;p&gt;If your site is using WordPress then we make a plugin that allows you to use SSO with your WordPress site. It also helps you set up an embedded forum and embedded comments on your site. &lt;a href=&#34;https://wordpress.org/plugins/vanilla-forums/&#34; target=&#34;_blank&#34;&gt;Get the plugin&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>