<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apis on Vanilla Forums Documentation</title>
    <link>http://127.0.0.1:8081/api/</link>
    <description>Recent content in Apis on Vanilla Forums Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://127.0.0.1:8081/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Endpoint: categories</title>
      <link>http://127.0.0.1:8081/api/categories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/categories/</guid>
      <description>/categories/add POST /api/v1/categories/add.ext HTTP/1.1 Host: https://yoursite.vanillaforums.com  Adds a new category.
Authentication: required
Parameters    Parameter Type Description     Name string The name of the category   UrlCode string URL friendly category stub   Description string Description of this category   Sort integer Category sort order rank   ParentCategoryID integer Parent Category (ID, use if no Name)   ParentCategory string Parent Category (Name, use if no ID)   Archived boolean Whether this category is archived   Permissions array Custom permissions for the category.</description>
    </item>
    
    <item>
      <title>Endpoint: comments</title>
      <link>http://127.0.0.1:8081/api/comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/comments/</guid>
      <description> /comments/add POST /api/v1/comments/add.ext HTTP/1.1 Host: https://yoursite.vanillaforums.com  Creates a new comment.
Authentication: required
Parameters    Parameter Type Description     DiscussionID integer Discussion to post comment to   Body string Comment body   Format string Comment output format   ForeignID string Related foreign content identifier   Type string Comment type    </description>
    </item>
    
    <item>
      <title>Endpoint: discussions</title>
      <link>http://127.0.0.1:8081/api/discussions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/discussions/</guid>
      <description>/discussions/add POST /api/v1/discussions/add.ext HTTP/1.1 Host: https://yoursite.vanillaforums.com  Creates a new discussion.
Authentication: required
Parameters    Parameter Type Description     Name string Discussion name   Body string Discussion body   Format string Discussion output format   CategoryID integer Discussion Category (ID, use if no Name)   Category string Discussion Category (Name, use if no ID)   ForeignID string Related foreign content identifier   Tags csv List of discussion tags   Type string Discussion type   Closed boolean Discussion closed state   Announce boolean Discussion announced state   Sink boolean Discussion sunk state    /discussions/bookmark POST /api/v1/discussions/bookmark.</description>
    </item>
    
    <item>
      <title>Endpoint: moderation</title>
      <link>http://127.0.0.1:8081/api/moderation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/moderation/</guid>
      <description>Moderation API Details about API endpoints for moderation.
Simple API will be needed to make requests from an un authenticated request. To use Simple API you need to:
 Enable to SimpleAPI Plugin Prepend /api/v1/ to the URL Append ?access_token=XXXXXX to the url  Example:
GET /api/v1/mod/preapproval.json?access_token=XXXXXX HTTP/1.1 Host: http://example.vanillaforums.com { &amp;quot;QueueName&amp;quot;: &amp;quot;premoderation&amp;quot;, &amp;quot;Queue&amp;quot;: [ .... ], &amp;quot;Page&amp;quot;: &amp;quot;p1&amp;quot;, &amp;quot;Totals&amp;quot;: { &amp;quot;Status&amp;quot;: { &amp;quot;approved&amp;quot;: 2, &amp;quot;denied&amp;quot;: 1, &amp;quot;unread&amp;quot;: 10 }, &amp;quot;Records&amp;quot;: 13, &amp;quot;PageSize&amp;quot;: 30, &amp;quot;Pages&amp;quot;: 1 } }  Permissions All of the moderation endpoints require the Garden.</description>
    </item>
    
    <item>
      <title>Endpoint: multisites</title>
      <link>http://127.0.0.1:8081/api/multisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/multisites/</guid>
      <description>This feature is only available on Vanilla Cloud Learn More...  Overview The site hub is a special service for VIP customers. It allows you to create sites on your VIP cluster and is used for people that want to integrate communities within their entire organization. You can make hub api calls just like other api calls, but you make those calls against your site hub rather than an individual site.</description>
    </item>
    
    <item>
      <title>Endpoint: roles</title>
      <link>http://127.0.0.1:8081/api/roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/roles/</guid>
      <description>/roles/add POST /api/v1/roles/add.ext HTTP/1.1 Host: https://yoursite.vanillaforums.com  Add a new role.
Authentication: required
Parameters    Parameter Type Description     Name string The name of the role   Description string Description of this role   Permissions array The permissions of the role. Each global permission is a dot-separated key with a boolean value.   Permissions.Category array Custom category permissions. Each item in the array is a permission for a particular category.</description>
    </item>
    
    <item>
      <title>Smart ID</title>
      <link>http://127.0.0.1:8081/api/smart-id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/smart-id/</guid>
      <description>Many API methods take a UserID as one of their required parameters, for example the /badge/give method. Often, especially in a SSO context, the calling system will not know the native Vanilla UserID, but will instead know some other identifying characteristic of the user, such as their Email, Username, or SSO ForeignID.
Fields that accept Smart IDs allow these tokens to be supplied instead of a native UserID. Internally, the Email, Username or SSO ForeignID will be converted into a Vanilla UserID by the API layer and passed along to the core method.</description>
    </item>
    
    <item>
      <title>Use API on External Sites</title>
      <link>http://127.0.0.1:8081/api/use-api-on-external-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/use-api-on-external-site/</guid>
      <description>The Vanilla Forums API can be used to display information from your community outside of the community such as your blog. This guide shows a basic example using javascript and jQuery.
JSONP Default browser security does not let you make API calls from an external site. This is necessary to prevent a wide range of hacking and in general keeps the web a safer place. However, to get around this limitation with the API Vanilla uses a technology called JSONP.</description>
    </item>
    
    <item>
      <title>Vanilla API</title>
      <link>http://127.0.0.1:8081/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:8081/api/</guid>
      <description>Vanilla has had a read-only ReSTful API for some time, but until now, no formal way to access any write methods. This all changes with Simple API. Now developers can access Vanilla’s write methods using an access_token configured in the dashboard.
Configuring Simple API Simple API is a plugin. Once you&amp;rsquo;ve enabled the plugin you’ll see a new link in your dashboard called &amp;ldquo;API&amp;rdquo;. This page allows forum owners to set the access token, define a user account that will be used for API access, and determine whether API calls are allowed over HTTP and HTTPS, or just HTTPS.</description>
    </item>
    
  </channel>
</rss>